# Scientist in orbital
cat_orbital_initializer = {
	name = Tyaur
	class = "rl_standard_stars"
	usage_odds = 0
	flags = { pouchkinn_system }
	max_instances = 1
	scaled_spawn_chance = 0

	planet = {
		class = star
		orbit_distance = 0
		orbit_angle = 1
		has_ring = no
	}

	planet = {
		size = { min = 10 max = 25 }
		orbit_distance = 35
		orbit_angle = { min = 90 max = 270 }
	}

	planet = {
		size = 16
		class = pc_gigaorbital_ring
		orbit_distance = 20
		orbit_angle = { min = 90 max = 270 }

		init_effect = {
			set_planet_flag = cat_orbital_elysium
			set_planet_flag = giga_elysium
			set_planet_flag = hot_zone				# Real Space (Prevents Rings)
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
			add_modifier = { modifier = "orbital_elysium" days = -1 }
			add_modifier = { modifier = "strange_pouchkinn_lab" days = -1 }
			clear_blockers = yes

			# Create Poochguard
			save_event_target_as = pouchkinn_planet
			create_country = { name = "Pouchkguard" type = faction }
			last_created_country = {
				create_fleet = {
					name = "Pouchkinn Guard"
					settings = { spawn_debris = no }
					effect = {
						set_owner = PREV
						set_location = event_target:pouchkinn_planet
						create_ship = { name = "Defensive Drone A" design = "Pouchkguard" }
						create_ship = { name = "Defensive Drone B" design = "Pouchkguard" }
						create_ship = { name = "Defensive Drone C" design = "Pouchkguard" }
						create_ship = { name = "Defensive Drone D" design = "Pouchkguard" }
						create_ship = { name = "Defensive Drone E" design = "Pouchkguard" }
						create_ship = { name = "Defensive Drone F" design = "Pouchkguard" }
						create_ship = { name = "Defensive Drone G" design = "Pouchkguard" }
						create_ship = { name = "Defensive Drone H" design = "Pouchkguard" }
					}
				}
			}
		}
	}

	planet = {
		class = pc_gas_giant
		orbit_distance = 0
		orbit_angle = 0
		change_orbit = @base_moon_distance
	}

	planet = {
		count = { min = 4 max = 7 }
		orbit_distance = 20
		orbit_angle = { min = 90 max = 270 }
		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}
}

# Singular Brown Dwarf
browndwarf_init = {
	class = "sc_f"
	usage = misc_system_init
	usage_odds = 1.5
	flags = { brown_dwarf_system }

	planet = {
		class = star
		orbit_distance = 0
		orbit_angle = 1
		size = { min = 20 max = 30 }
		has_ring = no
	}

	change_orbit = 45

	planet = {
		count = { min = 2 max = 10 }
		orbit_distance = 20
		orbit_angle = { min = 90 max = 270 }
		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	planet = {
		size = { min = 35 max = 40 }
		class = pc_gigabrown_dwarf
		orbit_distance = 50
		orbit_angle = { min = 90 max = 270 }
		change_orbit = @base_moon_distance
		init_effect = { add_modifier = { modifier = "giga_brown_dwarf" days = -1 } }

		moon = {
			class = pc_barren
			size = { min = 15 max = 22 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 10
		}

		moon = {
			class = rl_browndwarf_moon
			size = { min = 15 max = 22 }
			count = { min = 4 max = 6 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = { min = 5 max = 7 }
		}
	}
}

# Trinary Brown Dwarves
triplebrowndwarf_init = {
	class = "sc_f"
	usage = misc_system_init
	usage_odds = 100
	scaled_spawn_chance = 3
	max_instances = 1
	flags = { brown_dwarf_system_three }

	planet = {
		class = star
		orbit_distance = 0
		orbit_angle = 1
		size = { min = 20 max = 30 }
		has_ring = no
	}

	planet = {
		size = { min = 35 max = 40 }
		class = pc_gigabrown_dwarf
		orbit_distance = 125
		orbit_angle = { min = 100 max = 140 }
		init_effect = { add_modifier = { modifier = "giga_brown_dwarf" days = -1 } }
		change_orbit = @base_moon_distance

		moon = {
			class = pc_barren
			size = { min = 15 max = 22 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 10
		}

		moon = {
			class = rl_browndwarf_moon
			size = { min = 15 max = 22 }
			count = { min = 4 max = 6 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = { min = 5 max = 7 }
		}
	}

	planet = {
		size = { min = 35 max = 40 }
		class = pc_gigabrown_dwarf
		orbit_distance = 50
		orbit_angle = { min = 100 max = 140 }
		change_orbit = @base_moon_distance
		init_effect = { add_modifier = { modifier = "giga_brown_dwarf" days = -1 } }

		moon = {
			class = pc_barren
			size = { min = 15 max = 22 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 10
		}

		moon = {
			class = rl_browndwarf_moon
			size = { min = 15 max = 22 }
			count = { min = 4 max = 6 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = { min = 5 max = 7 }
		}
	}

	planet = {
		size = { min = 35 max = 40 }
		class = pc_gigabrown_dwarf
		orbit_distance = 50
		orbit_angle = { min = 100 max = 140 }
		change_orbit = @base_moon_distance
		init_effect = { add_modifier = { modifier = "giga_brown_dwarf" days = -1 } }

		moon = {
			class = pc_barren
			size = { min = 15 max = 22 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 10
		}

		moon = {
			class = rl_browndwarf_moon
			size = { min = 15 max = 22 }
			count = { min = 4 max = 6 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = { min = 5 max = 7 }
		}
	}
}

#FLAT
flat_primitive_init = {
	class = "rl_standard_stars"
	usage = misc_system_init
	usage_odds = 4.5
	primitive_system = yes
	flags = { primitive_system giga_flat_system }
	max_instances = 1

	planet = {
		class = star
		orbit_distance = 0
		orbit_angle = 1
		size = { min = 20 max = 30 }
		has_ring = no
	}

	change_orbit = 20

	planet = {
		orbit_distance = 20
		count = { min = 0 max = 3 }
	}

	change_orbit = 20

	planet = {
		orbit_distance = 0
		class = "pc_flat_world"
		orbit_angle = { min = 90 max = 270 }
		size = 25
		init_effect = {
			prevent_anomaly = yes
			generate_primitives_on_planet = yes
			clear_blockers = yes
			add_deposit = d_searing_desert
			add_deposit = d_bountiful_plains
			add_deposit = d_veiny_cliffs
			add_deposit = d_mineral_fields
			add_deposit = d_prosperous_mesa
			add_deposit = d_ore_rich_caverns
			add_deposit = d_rugged_woods
			add_deposit = d_tempestous_mountain
		}
		change_orbit = @base_moon_distance
	}

	planet = {
		orbit_distance = 20
		count = { min = 1 max = 4 }

		change_orbit = @base_moon_distance

		moon = {
			count = { min = 0 max = 1 }
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
		}
	}

	planet = {
		orbit_distance = 20
		count = { min = 0 max = 2 }
	}
}

# Interstellar Habitat
spacehabitat_init = {
	class = "sc_habitat"
	name = "Interstellar Habitat"
	flags = { habitat_system }

	planet = {
		class = star
		orbit_distance = 0
	}

	planet = {
		class = "pc_interstellar_habitat"
		orbit_distance = 0
		orbit_angle = 1
		size = 15
		has_ring = no

		init_effect = {
			set_planet_flag = giga_interstellar_hab
			set_planet_flag = hot_zone				# Real Space (Prevents Rings)
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
			set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
			add_modifier = { modifier = "interstellar_habitat" days = -1 }
			random_list = {
				15 = { while = { count = 1 add_deposit = d_zro_cloud } }
				10 = { while = { count = 2 add_deposit = d_zro_cloud } }
				5 = { while = { count = 3 add_deposit = d_zro_cloud } }
			}
		}
	}

	init_effect = { spawn_megastructure = { type = "interstellar_habitat_2" } }
}